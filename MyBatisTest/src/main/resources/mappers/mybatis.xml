<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Mapper XML : SQL을 작성 -->
<!-- namespace에는 보통 파일 이름을 적음 -->
<mapper namespace = "mybatis">

	<!-- m1 -->
	<insert id="m1">
		insert into tblAddress
			values(seqAddress.nextVal,'홍길동',20,'서울시 강남구 역삼동','m')
	</insert>


	<!-- m2 -->
	<delete id="m2" parameterType="String">
		delete from tblAddress where seq = #{seq}
	</delete>
	
	
	<!-- m3 -->
	<!-- java.util.HashMap 이거는 map 으로 적어도 됨 -->
	<update id="m3" parameterType = "map">
		update tblAddress set
			age = #{age}, 
			address = #{address}
				where seq = #{seq}
	</update>
	
	
	<!-- m4 -->
	<!-- com.test.mybatis.model.AddressDTO 이거 너무 길어서 mybatis-config에서 별칭 정함 -->
	<insert id="m4" parameterType="adto">
		insert into tblAddress
			values(seqAddress.nextVal,#{name},#{age},#{address},#{gender})
	</insert>
	
	
	
	<!-- m5 -->
	<!-- 반환값은 resultType 사용, 무조건 참조형을 적어야한다.(int안됨) -->
	<!-- public int m5  > resultType="Integer" -->
	<select id="m5" resultType="Integer">
		select count(*) from tblAddress
	</select>
	
	
	<!-- m6 -->
	<select id="m6" parameterType="String" resultType="adto">
		select * from tblAddress where seq = #{seq} 
	</select>
	
	
	<!-- m7 -->
	<!--  resultType="String" (list아님) 레코드 한줄에 대한 타입 적기 -->
	<select id="m7" resultType="String">
		select name from tblAddress order by name asc
	</select>
	
	
	
	<!-- m8 -->
	<!--  resultType="adtos" 레코드 한줄에 대한 타입 적기 -->
	<select id="m8" resultType="adto">
		select * from tblAddress order by name asc
	</select>
	
	
	
	
	

	
	
	
	
	
	
	
	
	<!-- m9 -->
	<!-- <select id="m9" parameterType="String">
		select count(*) from #{tableName}
	</select> -->
	<!-- 
		MyBatis : 바인딩 표현시
		1. #{} : 데잍텉 바인딩 -> ''를 붙임
		2. ${} : 식별자 바인딩 -> 그대로 넘어옴
	 -->
	
	
	<select id="m9" parameterType="String" resultType="Integer">
		select count(*) from ${tableName}
	</select>
	
	
	
	<!-- m10 -->
	<select id="m10" parameterType="Integer" resultType="adto">
		<!-- 
		select * from tblAddress
			where age &lt; #{age} 
		-->
		
		select * from tblAddress
			<![CDATA[
			where age > #{age}
			]]> 
			
	</select>
	
	
	
	<!-- m11 -->
	<select id="m11" parameterType="String" resultType="adto">
		<!-- select * from tblAddress
			where address like '%' || #{word} || '%' -->
		
		
		select * from tblAddress
			where address like '%${word}%'
		
	</select>
	
	
	
	
	<!-- m12 -->
	<!--
		동적 쿼리
		- 상황에 따라 쿼리를 조작
		- <if>, <choose>, <foreach> .. > JSTL 역할  
	-->
	<select id="m12" parameterType="String" resultType="adto">
		<!-- 
			세가지 경우 받고싶음..
			select * from tblAddress where gender = 'm'
			select * from tblAddress where gender = 'f'
			select * from tblAddress where gender = 'all'
		 -->
		 
		 
		 
		 <!-- 넘어온 문자열이 한 글자인 경우 toString()붙여야함 -->
		 <!-- <if test="gender == 'm'.toString()">
		 select * from tblAddress where gender = 'm'
		 </if>
		 <if test="gender == 'f'.toString()">
		select * from tblAddress where gender = 'f'
		</if>
		<if test="gender == 'all'">
		select * from tblAddress
		</if> -->
		
		
		
		
		<!-- 위의 코드는 반복되는 부분이 넘 많음 -->
		<!-- select * from tblAddress
			<if test="gender == 'm'.toString()">
		 	where gender='m'
		 	</if>
		 	<if test="gender == 'f'.toString()">
			where gender = 'f'
			</if> -->
			
			
			
		
		
		<!-- 받는 값 바인딩 하기 -->
		select * from tblAddress
			<if test="gender != 'all'">
		 	where gender= #{gender}
		 	</if>

	</select>
	
	
	
	
	
	
	
	<!-- m13 -->
	<!-- where 1=1 : 무조건 true인 조건을 닮 -->
	<select id="m13" parameterType="adto" resultType="adto">
		select * from tblAddress where 1=1
		
			<if test="age != null">
				and age > #{age}
			</if>
			<if test="gender != null">
				and gender = #{gender}
			</if>
			<if test="address != null">
				and address like '%' || #{address} || '%'
			</if>
			
			
			
					
	</select>
	
	
</mapper>











